image: intellectstorm/ruby-postgres-npm

stages:
  - build
  - test

.base:
  image: intellectstorm/ruby-postgres-npm
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - apt-cache/
      - vendor/
    policy: pull
  before_script:
    - gem install bundler --no-document
    - bundle install --jobs $(nproc) "${FLAGS[@]}" --path=vendor

.base_db:
  extends: .base
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: project_test
    POSTGRES_USER: postgres
    RAILS_ENV: test
  before_script:
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -qq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -yqq nodejs
    - gem install bundler --no-document
    - bundle install --jobs $(nproc) "${FLAGS[@]}" --path=vendor

install:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/
  script:
    - bundle install -j $(nproc)

rubocop:
  stage: test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor
    policy: pull
  script:
    - bundle config set --local path 'vendor/bundle'
    - bundle install
    - bundle exec rubocop

rspec:
  stage: test
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: gwi_test
    POSTGRES_USER: postgres
    POSTGRES_HOST_AUTH_METHOD: trust
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/
    policy: pull
  script:
    - npm install
    - bundle install
    - bundle exec rake db:create RAILS_ENV=test
    - bundle exec rake db:migrate RAILS_ENV=test
    - bundle exec rake assets:precompile RAILS_ENV=test
    - bundle exec rspec
  coverage: '/\(\d+.\d+\%\) covered/'
  artifacts:
    name: erd
    paths:
      - erd.pdf
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/coverage.xml

brakeman:
  stage: test
  allow_failure: true
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor
    policy: pull
  artifacts:
    name: brakeman_report
    when: always
    paths:
      - brakeman/
  script:
    - bundle config set --local path 'vendor/bundle'
    - bundle install
    - bundle exec brakeman --format html -o brakeman/index.html

bundle_audit:
  stage: test
  allow_failure: true
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/
    policy: pull
  script:
    - bundle config set --local path 'vendor/bundle'
    - bundle install
    - bundle exec bundle audit check --update
