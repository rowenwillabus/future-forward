image: ruby:3.2.2

stages:
  - build
  - test

.base_minimal:
  image: alpine:latest
  cache: {}

install:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/
  script:
    - gem install bundler --no-document
    - bundle config set --local path 'vendor/bundle'
    - bundle install -j $(nproc)

generate_data:
  stage: test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor
    policy: pull
  script:
    - apt-get update
    - apt-get install -y -qq graphviz npm
    - gem install bundler
    - bundle config set --local path 'vendor/bundle'
    - bundle install
    - bundle exec rake db:migrate
    - bundle exec rake db:seed
    - bundle exec rake dev_data:all

rubocop:
  stage: test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor
    policy: pull
  script:
    - gem install bundler
    - bundle config set --local path 'vendor/bundle'
    - bundle install
    - bundle exec rubocop

brakeman:
  stage: test
  allow_failure: true
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor
    policy: pull
  artifacts:
    name: brakeman_report
    when: always
    paths:
      - brakeman/
  # only:
  #   - master
  script:
    - gem install bundler
    - bundle config set --local path 'vendor/bundle'
    - bundle install
    - bundle exec brakeman --format html -o brakeman/index.html

bundle_audit:
  stage: test
  allow_failure: true
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/
    policy: pull
  script:
    - gem install bundler
    - bundle config set --local path 'vendor/bundle'
    - bundle install
    - bundle exec bundle audit check --update --ignore=GHSA-2qc6-mcvw-92cw
      #  rules:
      #    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      #      changes:
      #        - Gemfile
rspec:
  stage: test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/
    policy: pull
  script:
    - apt-get update
    - apt-get install -y -qq graphviz npm
    - gem install bundler
    - bundle config set --local path 'vendor/bundle'
    - bundle install
    - npm install
    - bundle exec rake db:migrate RAILS_ENV=test
    - bundle exec rake assets:precompile RAILS_ENV=test
    - bundle exec rspec
  coverage: '/\(\d+.\d+\%\) covered/'
  artifacts:
    name: erd
    paths:
      - erd.pdf
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/coverage.xml
