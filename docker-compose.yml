version: '3'

services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    volumes:
      - ./dbdata:/var/lib/postgresql/data
    networks:
      - database

  web:
    build: .
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - .:/rails
    networks:
      - database
      - web
  
  nginx:
    image: nginx:1.25
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./public/assets:/app/public/assets
    depends_on:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}.rule=Host(`${PROJECT_DOMAIN}`)"
      - "traefik.http.routers.${PROJECT_NAME}.entrypoints=http"
      - "traefik.http.middlewares.${PROJECT_NAME}-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.${PROJECT_NAME}.middlewares=${PROJECT_NAME}-https-redirect"
      - "traefik.http.routers.${PROJECT_NAME}-secure.rule=Host(`${PROJECT_DOMAIN}`)"
      - "traefik.http.routers.${PROJECT_NAME}-secure.entrypoints=https"
      - "traefik.http.routers.${PROJECT_NAME}-secure.tls=true"
      - "traefik.http.routers.${PROJECT_NAME}-secure.tls.certresolver=letsencrypt"
      - "traefik.docker.network=traefik_default"

    networks:
      - traefik_default
      - web
networks:
  database:
    name: ${PROJECT_NAME}-database
  web:
    name: ${PROJECT_NAME}-web
  traefik_default:
    name: traefik_default
